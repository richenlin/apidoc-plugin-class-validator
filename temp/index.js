"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.init = init;
const ApiClassParser_1 = require("./ApiClassParser");
function init(app) {
    const parser = Parser.getInstance();
    app.addHook('parser-find-elements', (...args) => parser.parseElements.apply(parser, args), 200);
}
class Parser {
    constructor() {
        // Supported types now
        const types = [
            'apiParamClass',
            'apiSuccessClass'
        ];
        this.map = {};
        for (const type of types) {
            this.map[type.toLowerCase()] = type;
        }
    }
    static getInstance() {
        return this.instance || (this.instance = new Parser());
    }
    /**
     * Plugin parse entry function
     *
     * @param elements All elements generated by apidoc
     * @param element this element
     * @param block
     * @param filename
     */
    parseElements(elements, element, block, filename) {
        if (!this.map[element.name]) {
            return;
        }
        // Use Api Class Parser to parse class definition
        const instance = new ApiClassParser_1.ApiClassParser(this.map[element.name]);
        instance.parseElements(elements, element);
    }
}
//# sourceMappingURL=index.js.map